# .github/workflows/build-android-apk.yml
name: Build Android APK

on:
  workflow_dispatch:
    inputs:
      build_type:
        description: Build type (debug or release)
        required: true
        default: release
        type: choice
        options: [debug, release]

env:
  JAVA_VERSION: '17'           # Google Play & OPPO 2025 最低要求 :contentReference[oaicite:1]{index=1}
  ANDROID_COMPILE_SDK: '34'    # targetSdk 34 满足三大商店 :contentReference[oaicite:2]{index=2}

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
    # 1️⃣  拉代码
    - uses: actions/checkout@v4

    # 2️⃣  装 JDK
    - uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: ${{ env.JAVA_VERSION }}

    # 3️⃣  装 Android SDK + build-tools 34.0.0
    - uses: android-actions/setup-android@v3
      with:
        packages: |
          platform-tools
          platforms;android-${{ env.ANDROID_COMPILE_SDK }}
          build-tools;34.0.0             # :contentReference[oaicite:3]{index=3}

    # 4️⃣  缓存 Gradle & NPM 加速
    - name: Cache Gradle
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*') }}
        restore-keys: gradle-${{ runner.os }}-
    - name: Cache NPM
      uses: actions/cache@v4
      with:
        path: ~/.npm
        key: npm-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
        restore-keys: npm-${{ runner.os }}-

    # 5️⃣  安装 JS 依赖
    - run: npm ci --prefer-offline --no-audit

    # 6️⃣  解码 JKS + 生成 key.properties
    - name: Prepare signing
      run: |
        echo "$ANDROID_SIGNING_KEY_BASE64" | base64 -d > android/app/tsinghar-release.jks
        cat <<EOF > android/key.properties
        storePassword=$ANDROID_KEYSTORE_PASSWORD
        keyPassword=$ANDROID_KEY_PASSWORD
        keyAlias=$ANDROID_KEY_ALIAS
        storeFile=tsinghar-release.jks
        EOF
      env:
        ANDROID_SIGNING_KEY_BASE64: ${{ secrets.ANDROID_SIGNING_KEY_BASE64 }}
        ANDROID_KEYSTORE_PASSWORD:  ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
        ANDROID_KEY_PASSWORD:       ${{ secrets.ANDROID_KEY_PASSWORD }}
        ANDROID_KEY_ALIAS:          ${{ secrets.ANDROID_KEY_ALIAS }}

    # 7️⃣  构建 APK（按输入决定 debug / release）
    - name: Assemble
      run: |
        cd android
        if [[ "${{ github.event.inputs.build_type }}" == "debug" ]]; then
          ./gradlew assembleDebug  --no-daemon --stacktrace
        else
          ./gradlew assembleRelease --no-daemon --stacktrace
        fi

    # 8️⃣  Release 构建后验证签名 V2/V3
    - name: Verify signing
      if: github.event.inputs.build_type == 'release'
      run: |
        ls android/app/build/outputs/apk/release
        apksigner verify -v android/app/build/outputs/apk/release/*.apk
      # apksigner 随 build-tools ≥ 26 提供  :contentReference[oaicite:4]{index=4}

    # 9️⃣  上传产物
    - uses: actions/upload-artifact@v4
      with:
        name: android-${{ github.event.inputs.build_type }}-apks
        path: android/app/build/outputs/apk/${{ github.event.inputs.build_type }}/*.apk
        retention-days: 30
